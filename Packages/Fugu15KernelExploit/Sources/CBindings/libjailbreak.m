#include <dlfcn.h>
#import <Foundation/Foundation.h>
#import <IOKit/IOKitLib.h>

void *libJailbreakHandle = NULL;

#include <sys/mount.h>
NSString *jbrootPath(NSString *path)
{
    NSString * jbroot = nil;
    NSArray *subItems = [[NSFileManager defaultManager] contentsOfDirectoryAtPath:@"/var/" error:nil];
    for (NSString *subItem in subItems) {
        if ([subItem hasPrefix:@".jbroot-"]) {
            jbroot = [@"/var/" stringByAppendingPathComponent:subItem];// stringByAppendingPathComponent:@"procursus"];
            break;
        }
    }

    assert(jbroot != NULL); //to avoid [nil stringByAppendingString:
    return [jbroot stringByAppendingPathComponent:path];
}

void *loadLibJailbreak(void)
{
	if (libJailbreakHandle) return libJailbreakHandle;
    NSString * jbroot = nil;
    NSArray *subItems = [[NSFileManager defaultManager] contentsOfDirectoryAtPath:@"/var/" error:nil];
    for (NSString *subItem in subItems) {
        if ([subItem hasPrefix:@".jbroot-"]) {
            jbroot = [@"/var/" stringByAppendingPathComponent:subItem];// stringByAppendingPathComponent:@"procursus"];
            break;
        }
    }
    if(!jbroot) return NULL;
	libJailbreakHandle = dlopen(jbrootPath(@"/basebin/libjailbreak.dylib").UTF8String, RTLD_NOW);
	return libJailbreakHandle;
}

bool __isOriginalDopamineJailbroken()
{
     struct statfs fs;
     int sfsret = statfs("/usr/lib", &fs);
     if (sfsret == 0) {
         return strcmp(fs.f_mntonname, "/usr/lib")==0;
     }
     return NO;
}
