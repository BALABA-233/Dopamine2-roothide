#include <dlfcn.h>
#import <Foundation/Foundation.h>
#import <IOKit/IOKitLib.h>

NSString* generateJBRAND()
{
    uint64_t value = ((uint64_t)arc4random()) | ((uint64_t)arc4random())<<32;
    uint8_t check = value>>8 ^ value >> 16 ^ value>>24 ^ value>>32 ^ value>>40 ^ value>>48 ^ value>>56;
    uint64_t JBRAND = (value & ~0xFF) | check;
    return [NSString stringWithFormat:@"%16llX", JBRAND];
}

BOOL checkJBRAND(NSString* str)
{
    char* endp=NULL;
    unsigned long value = strtoul(str.UTF8String, &endp, 16);
    if(!endp || *endp!='\0')
        return NO;
    
   uint8_t check = value>>8 ^ value >> 16 ^ value>>24 ^ value>>32 ^ value>>40 ^ value>>48 ^ value>>56;
   return check == (uint8_t)value;
}


NSString *jbrootPath(NSString *path)
{
    NSString * jbroot = nil;
    NSArray *subItems = [[NSFileManager defaultManager] contentsOfDirectoryAtPath:@"/var/" error:nil];
    for (NSString *subItem in subItems) {
        if ([subItem hasPrefix:@".jbroot-"]) {
            jbroot = [@"/var/" stringByAppendingPathComponent:subItem];
            break;
        }
    }

    assert(jbroot != NULL); //to avoid [nil stringByAppendingString:
    return [jbroot stringByAppendingPathComponent:path];
}

void *libJailbreakHandle = NULL;
void *loadLibJailbreak(void)
{
	if (libJailbreakHandle) return libJailbreakHandle;
    NSString * jbroot = nil;
    NSArray *subItems = [[NSFileManager defaultManager] contentsOfDirectoryAtPath:@"/var/" error:nil];
    for (NSString *subItem in subItems) {
        if ([subItem hasPrefix:@".jbroot-"]) {
            jbroot = [@"/var/" stringByAppendingPathComponent:subItem];// stringByAppendingPathComponent:@"procursus"];
            break;
        }
    }
    if(!jbroot) return NULL;
	libJailbreakHandle = dlopen(jbrootPath(@"/basebin/libjailbreak.dylib").UTF8String, RTLD_NOW);
	return libJailbreakHandle;
}

#include <sys/mount.h>
bool __isOriginalDopamineJailbroken()
{
     struct statfs fs;
     int sfsret = statfs("/usr/lib", &fs);
     if (sfsret == 0) {
         return strcmp(fs.f_mntonname, "/usr/lib")==0;
     }
     return NO;
}
